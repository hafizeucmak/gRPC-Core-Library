syntax = "proto3";

option csharp_namespace = "LibraryManagement.BorrowingGrpcService";

package borrowing;
import "google/protobuf/timestamp.proto";


service BorrowGRPCService {

  rpc BorrowBook(BorrowBookRequest) returns (BorrowBookResponse);

  rpc GetMostBorrowedBooks (MostBorrowedBooksRequest) returns (MostBorrowedBooksResponse);

  rpc GetBookCopiesAvailability(BookCopiesAvailabilityRequest) returns (BookCopiesAvailabilityResponse);
  
  rpc GetTopBorrowersWithinSpecifiedTimeframe(TopBorrowersRequest) returns (TopBorrowersResponse);
  
  rpc GetBorrowedBooksByUser(BorrowedBooksByUserRequest) returns (BorrowedBooksByUserResponse);
  
  rpc GetRelatedBooks(RelatedBooksRequest) returns (RelatedBooksResponse);
  
  rpc GetReadRate(ReadRateRequest) returns (ReadRateResponse);


}

message MostBorrowedBooksRequest {
	int32 expectedMostBorrowBookCount = 1;
}

message BorrowedBook {
  string title = 1;
  string author = 2;
  string publisher = 3;
  int32 publicationYear = 4;
  int32 pageCount = 5;
  string isbn = 6;
}

message BorrowBookRequest
{
	string isbn = 1;
	string userEmail = 2;
}

message BorrowBookResponse
{

}

message MostBorrowedBooksResponse {
    repeated BorrowedBook most_borrowed_books = 1;
}

message BookCopiesAvailabilityRequest {
	string isbn = 1;
}

message BookCopiesAvailabilityResponse {
	int32 borrowedCopiesCount = 1;
	int32 availableCopiesCount = 2;
}

message TopBorrowersRequest {
	google.protobuf.Timestamp startDate = 1;
	google.protobuf.Timestamp endDate = 2;
	int32 expectedTopBorrowerCount = 3;

}

message TopBorrowerDetail
{
	string userName = 1;
	string userEmail = 2;
	int32 borrowedBookCount = 3;
}

message TopBorrowersResponse {
	repeated TopBorrowerDetail topBorrowers = 1;
}

message BorrowedBooksByUserRequest {

	string userEmail = 1;
	google.protobuf.Timestamp startDate = 2;
	google.protobuf.Timestamp endDate = 3;
}

message BorrowedBookDetail {
  string title = 1;
  string author = 2;
  string publisher = 3;
  int32 pageCount = 4;
  string isbn = 5;
  google.protobuf.Timestamp borrowedDate = 6;
}

message BorrowedBooksByUserResponse {
	repeated BorrowedBookDetail borrowedBooks =1;
}

message RelatedBooksRequest {

}

message RelatedBooksResponse {

}

message ReadRateRequest {

}

message ReadRateResponse {

}